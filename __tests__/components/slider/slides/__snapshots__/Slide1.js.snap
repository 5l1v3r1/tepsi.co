exports[`test renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="row Slider__slide">
    <div
        className="col-md-6">
        <h1
            className="Slider__title Slider__title--main">
            Sen de yemek yerken, ne izleyeceğine karar veremiyor musun?
        </h1>
        <p
            className="u-gap-bottom">
            Sen yemeğini yerken ne izleyeceğini düşünme ya da izleyecek bir şeyler ararken yemeğini soğutma diye ses ile de kontrol edebileceğin bir sistem geliştirdik.
        </p>
        <Button
            primary={true}
            secondary={undefined}>
            Kullanmaya Başla!
        </Button>
    </div>
    <div
        className="col-md-6 u-text-center">
        <img
            alt="Sen de yemek yerken, ne izleyeceğine karar veremiyor musun?"
            className="u-inline-block"
            height="378"
            src="slider-image-1.svg"
            width="400" />
    </div>
</div>,
  "nodes": Array [
    <div
      className="row Slider__slide">
      <div
            className="col-md-6">
            <h1
                  className="Slider__title Slider__title--main">
                  Sen de yemek yerken, ne izleyeceğine karar veremiyor musun?
            </h1>
            <p
                  className="u-gap-bottom">
                  Sen yemeğini yerken ne izleyeceğini düşünme ya da izleyecek bir şeyler ararken yemeğini soğutma diye ses ile de kontrol edebileceğin bir sistem geliştirdik.
            </p>
            <Button
                  primary={true}
                  secondary={undefined}>
                  Kullanmaya Başla!
            </Button>
      </div>
      <div
            className="col-md-6 u-text-center">
            <img
                  alt="Sen de yemek yerken, ne izleyeceğine karar veremiyor musun?"
                  className="u-inline-block"
                  height="378"
                  src="slider-image-1.svg"
                  width="400" />
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Slide1 />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="row Slider__slide">
          <div
                    className="col-md-6">
                    <h1
                              className="Slider__title Slider__title--main">
                              Sen de yemek yerken, ne izleyeceğine karar veremiyor musun?
                    </h1>
                    <p
                              className="u-gap-bottom">
                              Sen yemeğini yerken ne izleyeceğini düşünme ya da izleyecek bir şeyler ararken yemeğini soğutma diye ses ile de kontrol edebileceğin bir sistem geliştirdik.
                    </p>
                    <Button
                              primary={true}
                              secondary={undefined}>
                              Kullanmaya Başla!
                    </Button>
          </div>
          <div
                    className="col-md-6 u-text-center">
                    <img
                              alt="Sen de yemek yerken, ne izleyeceğine karar veremiyor musun?"
                              className="u-inline-block"
                              height="378"
                              src="slider-image-1.svg"
                              width="400" />
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="row Slider__slide">
          <div
                    className="col-md-6">
                    <h1
                              className="Slider__title Slider__title--main">
                              Sen de yemek yerken, ne izleyeceğine karar veremiyor musun?
                    </h1>
                    <p
                              className="u-gap-bottom">
                              Sen yemeğini yerken ne izleyeceğini düşünme ya da izleyecek bir şeyler ararken yemeğini soğutma diye ses ile de kontrol edebileceğin bir sistem geliştirdik.
                    </p>
                    <Button
                              primary={true}
                              secondary={undefined}>
                              Kullanmaya Başla!
                    </Button>
          </div>
          <div
                    className="col-md-6 u-text-center">
                    <img
                              alt="Sen de yemek yerken, ne izleyeceğine karar veremiyor musun?"
                              className="u-inline-block"
                              height="378"
                              src="slider-image-1.svg"
                              width="400" />
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Slide1 />,
}
`;
